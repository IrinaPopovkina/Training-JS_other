Write a function called upsideDown that takes n as an argument and returns an n-string triangle of stars (*). 
The first line contains n stars, the second contains (n-1) stars, ..., the last line contains 1 star.

All lines except the last one end with a \n newline character.

For example for n = 5 the line should be:

"*****\n****\n***\n **\n*"

Note: When checking the solution in tests the line feed character is not displayed.

Examples:

upsideDown (1)  should return: "*";
tupsideDown (3)  should return: "***\n**\n*"

Solutions:

1)
function upsideDown(n){
  let str = '';
  for(let i = n; i >= 1; i--) {
    for(let j = i; j >= 1; j--) {
      str += '*';
    }
    if (i !== 1) str += '\n';
  }
  return str;
}

2)
function upsideDown(n){
  let str = '';
  for(let i = n; i >= 1; i--) {
    str += '*'.repeat(i) + '\n';
  }
  return str.slice(0, -1);
}

